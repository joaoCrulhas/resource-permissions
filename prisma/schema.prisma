// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum ResourceScopeEnum {
  GLOBAL
  GROUP
  USER
}

model User {
  id              Int               @id @default(autoincrement())
  firstName       String            @map("first_name")
  lastName        String            @map("last_name")
  email           String            @unique
  username        String            @unique
  createdAt       DateTime          @default(now()) @map("created_at")
  updatedAt       DateTime          @updatedAt @map("updated_at")
  userGroup       UserGroup[]
  resourceSharing ResourceSharing[]

  @@map("user")
}

model Group {
  id              Int               @id @default(autoincrement())
  name            String            @unique
  createdAt       DateTime          @default(now()) @map("created_at")
  updatedAt       DateTime          @updatedAt @map("updated_at")
  userGroup       UserGroup[]
  ResourceSharing ResourceSharing[]

  @@map("group")
}

model UserGroup {
  user   User @relation(fields: [userId], references: [id])
  userId Int  @map("user_id")

  group   Group @relation(fields: [groupId], references: [id])
  groupId Int   @map("group_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@id([userId, groupId])
  @@map("user_group")
}

model Resource {
  id              Int               @id @default(autoincrement())
  name            String            @unique
  description     String?
  createdAt       DateTime          @default(now()) @map("created_at")
  updatedAt       DateTime          @updatedAt @map("updated_at")
  ResourceSharing ResourceSharing[]

  @@map("resource")
}

model ResourceSharing {
  id Int @id @default(autoincrement())

  resourceId Int
  userId     Int
  groupId    Int?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user     User     @relation(fields: [userId], references: [id])
  group    Group?   @relation(fields: [groupId], references: [id])
  resource Resource @relation(fields: [resourceId], references: [id])

  resourceSharingScope ResourceSharingScope[]

  @@map("resource_sharing")
}

model ResourceSharingScope {
  id                   Int               @id @default(autoincrement())
  resourceSharingId    Int
  resourceSharingScope ResourceScopeEnum

  resourceSharing ResourceSharing @relation(fields: [resourceSharingId], references: [id])

  @@map("resource_sharing_scope")
}
