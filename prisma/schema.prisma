// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum ResourceScopeEnum {
  GLOBAL
  GROUP
  USER
}

model User {
  id           Int            @id @default(autoincrement())
  firstName    String         @map("first_name")
  lastName     String         @map("last_name")
  email        String         @unique
  username     String         @unique
  createdAt    DateTime       @default(now()) @map("created_at")
  updatedAt    DateTime       @updatedAt @map("updated_at")
  userGroup    UserGroup[]
  resourceUser ResourceUser[]

  @@map("user")
}

model Group {
  id            Int             @id @default(autoincrement())
  name          String          @unique
  createdAt     DateTime        @default(now()) @map("created_at")
  updatedAt     DateTime        @updatedAt @map("updated_at")
  userGroup     UserGroup[]
  resourceGroup ResourceGroup[]

  @@map("group")
}

model UserGroup {
  user   User @relation(fields: [userId], references: [id])
  userId Int  @map("user_id")

  group   Group @relation(fields: [groupId], references: [id])
  groupId Int   @map("group_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@id([userId, groupId])
  @@map("user_group")
}

model Resource {
  id            Int             @id @default(autoincrement())
  name          String          @unique
  description   String?
  createdAt     DateTime        @default(now()) @map("created_at")
  updatedAt     DateTime        @updatedAt @map("updated_at")
  resourceGroup ResourceGroup[]
  resourceUser  ResourceUser[]

  @@map("resource")
}

model ResourceGroup {
  resource   Resource @relation(fields: [resourceId], references: [id])
  resourceId Int      @map("resource_id")

  group   Group @relation(fields: [groupId], references: [id])
  groupId Int   @map("group_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@id([resourceId, groupId])
  @@map("resource_group")
}

model ResourceUser {
  resource   Resource @relation(fields: [resourceId], references: [id])
  resourceId Int      @map("resource_id")

  user   User @relation(fields: [userId], references: [id])
  userId Int  @map("user_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  isIndividual Boolean @default(false) @map("is_individual")
  isGlobal     Boolean @default(false) @map("is_global")

  @@id([resourceId, userId])
  @@map("resource_user")
}
